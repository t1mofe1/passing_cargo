import AnimatedStroke from '@/animations/Stroke';
import { useLocation } from '@/hooks/device/useLocation';
import useTheme from '@/hooks/useTheme';
import { FontAwesome5 } from '@expo/vector-icons';
import { loadAsync as loadFontsAsync } from 'expo-font';
import * as Haptics from 'expo-haptics';
import * as ExpoSplashScreen from 'expo-splash-screen';
import { PropsWithChildren, useCallback, useEffect, useState } from 'react';
import { StyleSheet, View } from 'react-native';
import Animated, {
  Easing,
  runOnJS,
  useAnimatedStyle,
  useDerivedValue,
  useSharedValue,
  withTiming,
} from 'react-native-reanimated';
import { Svg } from 'react-native-svg';

// TODO: fix fade animation every state change

// Instruct SplashScreen not to hide yet, we want to do this manually
ExpoSplashScreen.preventAutoHideAsync().catch(
  () => {},
); /* reloading the app might trigger some race conditions, ignore them */

// #region animation
const splashImagePaths = [
  /* Body */ 'M177.5 103C181.5 103 187 106.5 187 112V118C187 124.5 186.5 124 190 124H197.5C202.5 124 204 126.5 204 130V135C204 139 202 140 200.5 140H196.5C193 131 182.5 130 178.5 140H150C150 140 146.75 140 149 135.5C150.796 131.909 159.917 113.348 163.526 106C164.755 103.5 166.5 103 169.5 103L177.5 103Z',
  /* Window */ 'M159 124L166.5 108H177.5C180.5 108 182.5 109 182.5 112V124H159Z',
  /* Wheel */ 'M194 141.5C194 145.09 191.09 148 187.5 148C183.91 148 181 145.09 181 141.5C181 137.91 183.91 135 187.5 135C191.09 135 194 137.91 194 141.5Z',
  /* Upper cloud */ 'M124 106.5C124 105.119 125.119 104 126.5 104H152.5C153.881 104 155 105.119 155 106.5V106.5C155 107.881 153.881 109 152.5 109H126.5C125.119 109 124 107.881 124 106.5V106.5Z',
  /* Middle cloud */ 'M108 119C108 117.343 109.343 116 111 116H140C141.657 116 143 117.343 143 119V119C143 120.657 141.657 122 140 122H111C109.343 122 108 120.657 108 119V119Z',
  /* Lower cloud */ 'M122 131C122 129.343 123.343 128 125 128H141C142.657 128 144 129.343 144 131V131C144 132.657 142.657 134 141 134H125C123.343 134 122 132.657 122 131V131Z',

  /* P */ 'M41.0321 169.5C42.0121 169.5 42.9221 169.68 43.7621 170.04C44.6221 170.4 45.3721 170.89 46.0121 171.51C46.6521 172.13 47.1521 172.86 47.5121 173.7C47.8921 174.54 48.0821 175.43 48.0821 176.37C48.0821 177.31 47.8921 178.2 47.5121 179.04C47.1521 179.88 46.6521 180.61 46.0121 181.23C45.3721 181.85 44.6221 182.34 43.7621 182.7C42.9221 183.06 42.0121 183.24 41.0321 183.24H35.7821V189H32.4821V179.94H41.0321C41.5521 179.94 42.0321 179.85 42.4721 179.67C42.9321 179.47 43.3321 179.21 43.6721 178.89C44.0121 178.57 44.2821 178.19 44.4821 177.75C44.6821 177.31 44.7821 176.85 44.7821 176.37C44.7821 175.87 44.6821 175.41 44.4821 174.99C44.2821 174.55 44.0121 174.17 43.6721 173.85C43.3321 173.53 42.9321 173.28 42.4721 173.1C42.0321 172.9 41.5521 172.8 41.0321 172.8H32.4821V169.5H41.0321Z',
  /* A */ 'M66.1678 189L59.4778 173.55L52.7578 189H49.1578L57.6178 169.5H61.3078L69.7678 189H66.1678Z',
  /* S */ 'M72.8358 189V185.7H80.8458C81.1258 185.7 81.4058 185.66 81.6858 185.58C81.9858 185.5 82.2458 185.38 82.4658 185.22C82.7058 185.04 82.8958 184.82 83.0358 184.56C83.1758 184.3 83.2458 183.99 83.2458 183.63C83.2458 183.31 83.1658 183.03 83.0058 182.79C82.8658 182.55 82.6258 182.33 82.2858 182.13C81.9658 181.93 81.5358 181.74 80.9958 181.56C80.4558 181.36 79.7858 181.15 78.9858 180.93C78.2658 180.73 77.5058 180.5 76.7058 180.24C75.9058 179.96 75.1658 179.6 74.4858 179.16C73.8258 178.72 73.2758 178.16 72.8358 177.48C72.3958 176.78 72.1758 175.91 72.1758 174.87C72.1758 174.11 72.3158 173.4 72.5958 172.74C72.8958 172.08 73.2958 171.51 73.7958 171.03C74.3158 170.55 74.9158 170.18 75.5958 169.92C76.2958 169.64 77.0558 169.5 77.8758 169.5H85.8858V172.8H77.8758C77.5758 172.8 77.2858 172.84 77.0058 172.92C76.7258 173 76.4658 173.13 76.2258 173.31C76.0058 173.47 75.8258 173.68 75.6858 173.94C75.5458 174.2 75.4758 174.51 75.4758 174.87C75.4758 175.23 75.5458 175.54 75.6858 175.8C75.8458 176.04 76.0958 176.27 76.4358 176.49C76.7758 176.71 77.2258 176.92 77.7858 177.12C78.3458 177.3 79.0358 177.51 79.8558 177.75C80.5558 177.95 81.2958 178.18 82.0758 178.44C82.8758 178.7 83.6058 179.05 84.2658 179.49C84.9258 179.91 85.4658 180.46 85.8858 181.14C86.3258 181.8 86.5458 182.63 86.5458 183.63C86.5458 184.39 86.3958 185.1 86.0958 185.76C85.8158 186.42 85.4158 186.99 84.8958 187.47C84.3958 187.95 83.7958 188.33 83.0958 188.61C82.3958 188.87 81.6458 189 80.8458 189H72.8358Z',
  /* S */ 'M99.713 177.6C100.493 177.6 101.233 177.75 101.933 178.05C102.633 178.35 103.233 178.76 103.733 179.28C104.253 179.78 104.663 180.38 104.963 181.08C105.263 181.78 105.413 182.52 105.413 183.3C105.413 184.08 105.263 184.82 104.963 185.52C104.663 186.22 104.253 186.83 103.733 187.35C103.233 187.85 102.633 188.25 101.933 188.55C101.233 188.85 100.493 189 99.713 189H91.703V185.7H99.713C100.373 185.7 100.933 185.47 101.393 185.01C101.873 184.53 102.113 183.96 102.113 183.3C102.113 182.64 101.873 182.08 101.393 181.62C100.933 181.14 100.373 180.9 99.713 180.9H96.743C95.963 180.9 95.223 180.75 94.523 180.45C93.823 180.15 93.213 179.75 92.693 179.25C92.193 178.73 91.793 178.12 91.493 177.42C91.193 176.72 91.043 175.98 91.043 175.2C91.043 174.42 91.193 173.68 91.493 172.98C91.793 172.28 92.193 171.68 92.693 171.18C93.213 170.66 93.823 170.25 94.523 169.95C95.223 169.65 95.963 169.5 96.743 169.5H104.753V172.8H96.743C96.083 172.8 95.513 173.04 95.033 173.52C94.573 173.98 94.343 174.54 94.343 175.2C94.343 175.86 94.573 176.43 95.033 176.91C95.513 177.37 96.083 177.6 96.743 177.6H99.713Z',
  /* I */ 'M113.51 189H110.21V169.5H113.51V189Z',
  /* N */ 'M132.298 169.5H135.598V189H132.298V183.9L121.918 173.49V189H118.618V169.5H122.608L132.298 179.25V169.5Z',
  /* G */ 'M150.008 189.33C148.588 189.33 147.248 189.07 145.988 188.55C144.728 188.01 143.628 187.29 142.688 186.39C141.748 185.47 141.008 184.4 140.468 183.18C139.928 181.94 139.658 180.63 139.658 179.25C139.658 177.87 139.928 176.57 140.468 175.35C141.008 174.11 141.748 173.04 142.688 172.14C143.628 171.22 144.728 170.5 145.988 169.98C147.248 169.44 148.588 169.17 150.008 169.17C151.508 169.17 152.928 169.47 154.268 170.07C155.628 170.67 156.798 171.51 157.778 172.59L155.348 174.81C154.668 174.05 153.858 173.47 152.918 173.07C151.998 172.67 151.028 172.47 150.008 172.47C149.048 172.47 148.138 172.65 147.278 173.01C146.418 173.35 145.668 173.83 145.028 174.45C144.388 175.07 143.878 175.79 143.498 176.61C143.138 177.43 142.958 178.31 142.958 179.25C142.958 180.19 143.138 181.07 143.498 181.89C143.878 182.71 144.388 183.43 145.028 184.05C145.668 184.67 146.418 185.16 147.278 185.52C148.138 185.86 149.048 186.03 150.008 186.03C151.008 186.03 151.948 185.85 152.828 185.49C153.708 185.11 154.488 184.58 155.168 183.9V180.9H150.938V177.6H158.468V185.13L158.078 185.58C157.078 186.78 155.878 187.71 154.478 188.37C153.078 189.01 151.588 189.33 150.008 189.33Z',

  /* C */ 'M185.194 189.33C183.774 189.33 182.434 189.07 181.174 188.55C179.914 188.01 178.814 187.29 177.874 186.39C176.934 185.47 176.194 184.4 175.654 183.18C175.114 181.94 174.844 180.63 174.844 179.25C174.844 177.87 175.114 176.57 175.654 175.35C176.194 174.11 176.934 173.04 177.874 172.14C178.814 171.22 179.914 170.5 181.174 169.98C182.434 169.44 183.774 169.17 185.194 169.17C186.694 169.17 188.114 169.47 189.454 170.07C190.814 170.67 191.984 171.51 192.964 172.59L190.534 174.81C189.854 174.05 189.044 173.47 188.104 173.07C187.184 172.67 186.214 172.47 185.194 172.47C184.234 172.47 183.324 172.65 182.464 173.01C181.604 173.35 180.854 173.83 180.214 174.45C179.574 175.07 179.064 175.79 178.684 176.61C178.324 177.43 178.144 178.31 178.144 179.25C178.144 180.19 178.324 181.07 178.684 181.89C179.064 182.71 179.574 183.43 180.214 184.05C180.854 184.67 181.604 185.16 182.464 185.52C183.324 185.86 184.234 186.03 185.194 186.03C186.274 186.03 187.294 185.81 188.254 185.37C189.234 184.93 190.064 184.3 190.744 183.48L193.264 185.58C192.264 186.78 191.064 187.71 189.664 188.37C188.264 189.01 186.774 189.33 185.194 189.33Z',
  /* A */ 'M212.213 189L205.523 173.55L198.803 189H195.203L203.663 169.5H207.353L215.813 189H212.213Z',
  /* R */ 'M233.431 189H229.531L225.841 183.24H221.821V189H220.831H218.521V169.5H227.071C228.051 169.5 228.961 169.68 229.801 170.04C230.661 170.4 231.411 170.89 232.051 171.51C232.691 172.13 233.191 172.86 233.551 173.7C233.931 174.54 234.121 175.43 234.121 176.37C234.121 177.11 234.001 177.82 233.761 178.5C233.541 179.18 233.221 179.8 232.801 180.36C232.401 180.92 231.911 181.41 231.331 181.83C230.771 182.25 230.151 182.58 229.471 182.82L233.431 189ZM227.071 179.94C227.591 179.94 228.071 179.85 228.511 179.67C228.971 179.47 229.371 179.21 229.711 178.89C230.051 178.57 230.321 178.19 230.521 177.75C230.721 177.31 230.821 176.85 230.821 176.37C230.821 175.87 230.721 175.41 230.521 174.99C230.321 174.55 230.051 174.17 229.711 173.85C229.371 173.53 228.971 173.28 228.511 173.1C228.071 172.9 227.591 172.8 227.071 172.8H221.821V179.94H227.071Z',
  /* G */ 'M247.479 189.33C246.059 189.33 244.719 189.07 243.459 188.55C242.199 188.01 241.099 187.29 240.159 186.39C239.219 185.47 238.479 184.4 237.939 183.18C237.399 181.94 237.129 180.63 237.129 179.25C237.129 177.87 237.399 176.57 237.939 175.35C238.479 174.11 239.219 173.04 240.159 172.14C241.099 171.22 242.199 170.5 243.459 169.98C244.719 169.44 246.059 169.17 247.479 169.17C248.979 169.17 250.399 169.47 251.739 170.07C253.099 170.67 254.269 171.51 255.249 172.59L252.819 174.81C252.139 174.05 251.329 173.47 250.389 173.07C249.469 172.67 248.499 172.47 247.479 172.47C246.519 172.47 245.609 172.65 244.749 173.01C243.889 173.35 243.139 173.83 242.499 174.45C241.859 175.07 241.349 175.79 240.969 176.61C240.609 177.43 240.429 178.31 240.429 179.25C240.429 180.19 240.609 181.07 240.969 181.89C241.349 182.71 241.859 183.43 242.499 184.05C243.139 184.67 243.889 185.16 244.749 185.52C245.609 185.86 246.519 186.03 247.479 186.03C248.479 186.03 249.419 185.85 250.299 185.49C251.179 185.11 251.959 184.58 252.639 183.9V179.25H255.939V185.13L255.549 185.58C254.549 186.78 253.349 187.71 251.949 188.37C250.549 189.01 249.059 189.33 247.479 189.33Z',
  /* O */ 'M270.038 189.33C268.618 189.33 267.278 189.07 266.018 188.55C264.758 188.01 263.658 187.29 262.718 186.39C261.778 185.47 261.038 184.4 260.498 183.18C259.958 181.94 259.688 180.63 259.688 179.25C259.688 177.87 259.958 176.57 260.498 175.35C261.038 174.11 261.778 173.04 262.718 172.14C263.658 171.22 264.758 170.5 266.018 169.98C267.278 169.44 268.618 169.17 270.038 169.17C271.478 169.17 272.828 169.44 274.088 169.98C275.348 170.5 276.448 171.22 277.388 172.14C278.328 173.04 279.068 174.11 279.608 175.35C280.148 176.57 280.418 177.87 280.418 179.25C280.418 180.63 280.148 181.94 279.608 183.18C279.068 184.4 278.328 185.47 277.388 186.39C276.448 187.29 275.348 188.01 274.088 188.55C272.828 189.07 271.478 189.33 270.038 189.33ZM270.038 172.47C269.078 172.47 268.168 172.65 267.308 173.01C266.448 173.35 265.698 173.83 265.058 174.45C264.418 175.07 263.908 175.79 263.528 176.61C263.168 177.43 262.988 178.31 262.988 179.25C262.988 180.19 263.168 181.07 263.528 181.89C263.908 182.71 264.418 183.43 265.058 184.05C265.698 184.67 266.448 185.16 267.308 185.52C268.168 185.86 269.078 186.03 270.038 186.03C271.018 186.03 271.938 185.86 272.798 185.52C273.658 185.16 274.408 184.67 275.048 184.05C275.688 183.43 276.188 182.71 276.548 181.89C276.928 181.07 277.118 180.19 277.118 179.25C277.118 178.31 276.928 177.43 276.548 176.61C276.188 175.79 275.688 175.07 275.048 174.45C274.408 173.83 273.658 173.35 272.798 173.01C271.938 172.65 271.018 172.47 270.038 172.47Z',

  // /* S */ 'M80.9307 203.301C80.8994 202.986 80.7653 202.741 80.5283 202.566C80.2913 202.392 79.9697 202.305 79.5635 202.305C79.2874 202.305 79.0544 202.344 78.8643 202.422C78.6742 202.497 78.5283 202.603 78.4268 202.738C78.3278 202.874 78.2783 203.027 78.2783 203.199C78.2731 203.342 78.3031 203.467 78.3682 203.574C78.4359 203.681 78.5283 203.773 78.6455 203.852C78.7627 203.927 78.8981 203.993 79.0518 204.051C79.2054 204.105 79.3695 204.152 79.5439 204.191L80.2627 204.363C80.6117 204.441 80.932 204.546 81.2236 204.676C81.5153 204.806 81.7679 204.966 81.9814 205.156C82.195 205.346 82.3604 205.57 82.4775 205.828C82.5973 206.086 82.6585 206.382 82.6611 206.715C82.6585 207.204 82.5335 207.629 82.2861 207.988C82.0413 208.345 81.6872 208.622 81.2236 208.82C80.7627 209.016 80.2067 209.113 79.5557 209.113C78.9098 209.113 78.3473 209.014 77.8682 208.816C77.3916 208.618 77.0192 208.326 76.751 207.938C76.4854 207.547 76.346 207.064 76.333 206.488H77.9697C77.988 206.757 78.0648 206.98 78.2002 207.16C78.3382 207.337 78.5218 207.471 78.751 207.563C78.9827 207.651 79.2445 207.695 79.5361 207.695C79.8226 207.695 80.0713 207.654 80.2822 207.57C80.4958 207.487 80.6611 207.371 80.7783 207.223C80.8955 207.074 80.9541 206.904 80.9541 206.711C80.9541 206.531 80.9007 206.38 80.7939 206.258C80.6898 206.135 80.5361 206.031 80.333 205.945C80.1325 205.859 79.8864 205.781 79.5947 205.711L78.7236 205.492C78.0492 205.328 77.5166 205.072 77.126 204.723C76.7354 204.374 76.5413 203.904 76.5439 203.312C76.5413 202.828 76.6702 202.405 76.9307 202.043C77.1937 201.681 77.5544 201.398 78.0127 201.195C78.471 200.992 78.9919 200.891 79.5752 200.891C80.1689 200.891 80.6872 200.992 81.1299 201.195C81.5752 201.398 81.9215 201.681 82.1689 202.043C82.4163 202.405 82.5439 202.824 82.5518 203.301H80.9307Z',
  // /* I */ 'M88.2402 201V209H86.5488V201H88.2402Z',
  // /* M */ 'M92.3818 201H94.4678L96.6709 206.375H96.7646L98.9678 201H101.054V209H99.4131V203.793H99.3467L97.2764 208.961H96.1592L94.0889 203.773H94.0225V209H92.3818V201Z',
  // /* P */ 'M105.197 209V201H108.354C108.96 201 109.477 201.116 109.904 201.348C110.331 201.577 110.657 201.896 110.881 202.305C111.107 202.711 111.221 203.18 111.221 203.711C111.221 204.242 111.106 204.711 110.877 205.117C110.648 205.523 110.316 205.84 109.881 206.066C109.449 206.293 108.925 206.406 108.311 206.406H106.299V205.051H108.037C108.363 205.051 108.631 204.995 108.842 204.883C109.055 204.768 109.214 204.611 109.318 204.41C109.425 204.207 109.479 203.974 109.479 203.711C109.479 203.445 109.425 203.214 109.318 203.016C109.214 202.815 109.055 202.66 108.842 202.551C108.628 202.439 108.357 202.383 108.029 202.383H106.889V209H105.197Z',
  // /* L */ 'M115.069 209V201H116.761V207.605H120.19V209H115.069Z',
  // /* E */ 'M124.061 209V201H129.451V202.395H125.752V204.301H129.174V205.695H125.752V207.605H129.467V209H124.061Z',
  // /* . */ 'M134.487 209.102C134.229 209.102 134.008 209.01 133.823 208.828C133.641 208.643 133.55 208.422 133.55 208.164C133.55 207.909 133.641 207.69 133.823 207.508C134.008 207.326 134.229 207.234 134.487 207.234C134.737 207.234 134.956 207.326 135.144 207.508C135.331 207.69 135.425 207.909 135.425 208.164C135.425 208.336 135.381 208.493 135.292 208.637C135.206 208.777 135.093 208.891 134.952 208.977C134.812 209.06 134.657 209.102 134.487 209.102Z',
  // /* F */ 'M144.492 209V201H149.789V202.395H146.184V204.301H149.438V205.695H146.184V209H144.492Z',
  // /* A */ 'M154.057 209H152.244L155.006 201H157.186L159.943 209H158.131L156.127 202.828H156.064L154.057 209ZM153.943 205.855H158.225V207.176H153.943V205.855Z',
  // /* S */ 'M167.813 203.301C167.782 202.986 167.648 202.741 167.411 202.566C167.174 202.392 166.853 202.305 166.446 202.305C166.17 202.305 165.937 202.344 165.747 202.422C165.557 202.497 165.411 202.603 165.31 202.738C165.211 202.874 165.161 203.027 165.161 203.199C165.156 203.342 165.186 203.467 165.251 203.574C165.319 203.681 165.411 203.773 165.528 203.852C165.646 203.927 165.781 203.993 165.935 204.051C166.088 204.105 166.252 204.152 166.427 204.191L167.146 204.363C167.494 204.441 167.815 204.546 168.106 204.676C168.398 204.806 168.651 204.966 168.864 205.156C169.078 205.346 169.243 205.57 169.36 205.828C169.48 206.086 169.541 206.382 169.544 206.715C169.541 207.204 169.416 207.629 169.169 207.988C168.924 208.345 168.57 208.622 168.106 208.82C167.646 209.016 167.09 209.113 166.438 209.113C165.793 209.113 165.23 209.014 164.751 208.816C164.274 208.618 163.902 208.326 163.634 207.938C163.368 207.547 163.229 207.064 163.216 206.488H164.853C164.871 206.757 164.948 206.98 165.083 207.16C165.221 207.337 165.405 207.471 165.634 207.563C165.866 207.651 166.127 207.695 166.419 207.695C166.705 207.695 166.954 207.654 167.165 207.57C167.379 207.487 167.544 207.371 167.661 207.223C167.778 207.074 167.837 206.904 167.837 206.711C167.837 206.531 167.784 206.38 167.677 206.258C167.573 206.135 167.419 206.031 167.216 205.945C167.015 205.859 166.769 205.781 166.478 205.711L165.606 205.492C164.932 205.328 164.399 205.072 164.009 204.723C163.618 204.374 163.424 203.904 163.427 203.312C163.424 202.828 163.553 202.405 163.813 202.043C164.076 201.681 164.437 201.398 164.896 201.195C165.354 200.992 165.875 200.891 166.458 200.891C167.052 200.891 167.57 200.992 168.013 201.195C168.458 201.398 168.804 201.681 169.052 202.043C169.299 202.405 169.427 202.824 169.435 203.301H167.813Z',
  // /* T */ 'M173.127 202.395V201H179.697V202.395H177.248V209H175.576V202.395H173.127Z',
  // /* . */ 'M184.095 209.102C183.837 209.102 183.616 209.01 183.431 208.828C183.248 208.643 183.157 208.422 183.157 208.164C183.157 207.909 183.248 207.69 183.431 207.508C183.616 207.326 183.837 207.234 184.095 207.234C184.345 207.234 184.563 207.326 184.751 207.508C184.938 207.69 185.032 207.909 185.032 208.164C185.032 208.336 184.988 208.493 184.899 208.637C184.813 208.777 184.7 208.891 184.56 208.977C184.419 209.06 184.264 209.102 184.095 209.102Z',
  // /* S */ 'M198.439 203.301C198.408 202.986 198.274 202.741 198.037 202.566C197.8 202.392 197.479 202.305 197.072 202.305C196.796 202.305 196.563 202.344 196.373 202.422C196.183 202.497 196.037 202.603 195.936 202.738C195.837 202.874 195.787 203.027 195.787 203.199C195.782 203.342 195.812 203.467 195.877 203.574C195.945 203.681 196.037 203.773 196.154 203.852C196.271 203.927 196.407 203.993 196.561 204.051C196.714 204.105 196.878 204.152 197.053 204.191L197.771 204.363C198.12 204.441 198.441 204.546 198.732 204.676C199.024 204.806 199.277 204.966 199.49 205.156C199.704 205.346 199.869 205.57 199.986 205.828C200.106 206.086 200.167 206.382 200.17 206.715C200.167 207.204 200.042 207.629 199.795 207.988C199.55 208.345 199.196 208.622 198.732 208.82C198.271 209.016 197.715 209.113 197.064 209.113C196.419 209.113 195.856 209.014 195.377 208.816C194.9 208.618 194.528 208.326 194.26 207.938C193.994 207.547 193.855 207.064 193.842 206.488H195.479C195.497 206.757 195.574 206.98 195.709 207.16C195.847 207.337 196.031 207.471 196.26 207.563C196.492 207.651 196.753 207.695 197.045 207.695C197.331 207.695 197.58 207.654 197.791 207.57C198.005 207.487 198.17 207.371 198.287 207.223C198.404 207.074 198.463 206.904 198.463 206.711C198.463 206.531 198.41 206.38 198.303 206.258C198.199 206.135 198.045 206.031 197.842 205.945C197.641 205.859 197.395 205.781 197.104 205.711L196.232 205.492C195.558 205.328 195.025 205.072 194.635 204.723C194.244 204.374 194.05 203.904 194.053 203.312C194.05 202.828 194.179 202.405 194.439 202.043C194.702 201.681 195.063 201.398 195.521 201.195C195.98 200.992 196.501 200.891 197.084 200.891C197.678 200.891 198.196 200.992 198.639 201.195C199.084 201.398 199.43 201.681 199.678 202.043C199.925 202.405 200.053 202.824 200.061 203.301H198.439Z',
  // /* A */ 'M205.254 209H203.441L206.203 201H208.383L211.141 209H209.328L207.324 202.828H207.262L205.254 209ZM205.141 205.855H209.422V207.176H205.141V205.855Z',
  // /* F */ 'M214.854 209V201H220.15V202.395H216.545V204.301H219.799V205.695H216.545V209H214.854Z',
  // /* E */ 'M224.038 209V201H229.429V202.395H225.729V204.301H229.151V205.695H225.729V207.605H229.444V209H224.038Z',
  // /* . */ 'M234.465 209.102C234.207 209.102 233.986 209.01 233.801 208.828C233.618 208.643 233.527 208.422 233.527 208.164C233.527 207.909 233.618 207.69 233.801 207.508C233.986 207.326 234.207 207.234 234.465 207.234C234.715 207.234 234.934 207.326 235.121 207.508C235.309 207.69 235.402 207.909 235.402 208.164C235.402 208.336 235.358 208.493 235.27 208.637C235.184 208.777 235.07 208.891 234.93 208.977C234.789 209.06 234.634 209.102 234.465 209.102Z',
];

type AnimationProps = {
  onCompleted: () => void;
  onFillCompleted: () => void;
  onFadeOutCompleted: () => void;

  dontComplete?: boolean;
  skipAnimation?: boolean;
};
function Animation({
  onCompleted,
  onFillCompleted,
  onFadeOutCompleted,
  dontComplete,
  skipAnimation,
}: PropsWithChildren<AnimationProps>) {
  const { colors } = useTheme();

  const fillDuration = 500;
  const fadeOutDuration = 250;
  const animationDuration = 2000;
  const endDelay = 1000;

  // #region fade out animation
  const fadeOutAnimation = useSharedValue(1);

  const animatedStyle = useAnimatedStyle(() => ({
    opacity: fadeOutAnimation.value,
  }));

  const animateFadeOut = () => {
    fadeOutAnimation.value = withTiming(
      0,
      {
        duration: fadeOutDuration,
        easing: Easing.linear,
      },
      () => runOnJS(onFadeOutCompleted)(),
    );
  };
  // #endregion fade out animation

  // #region fill progress
  const fillProgress = useSharedValue(skipAnimation ? 1 : 0);

  const afterFill = () => {
    onFillCompleted();

    if (dontComplete) return;

    setTimeout(() => {
      animateFadeOut();
      onCompleted();
    }, endDelay);
  };

  const fillAnimation = () => {
    fillProgress.value = withTiming(
      1,
      {
        duration: fillDuration,
        easing: Easing.linear,
      },
      () => runOnJS(afterFill)(),
    );
  };

  const vibrated = useSharedValue(false);
  useDerivedValue(() => {
    if (fillProgress.value >= 0.95 && !vibrated.value) {
      console.log('[SplashScreen] Vibration');
      vibrated.value = true;
      runOnJS(Haptics.notificationAsync)(
        Haptics.NotificationFeedbackType.Success,
      );
    }
  }, [fillProgress.value]);
  // #endregion fill progress

  // #region progress
  const progress = useSharedValue(skipAnimation ? 1 : 0);

  useEffect(() => {
    progress.value = withTiming(
      1,
      {
        duration: animationDuration,
        easing: Easing.linear,
      },
      () => {
        runOnJS(fillAnimation)();
      },
    );
  }, [animationDuration, onCompleted]);
  // #endregion progress

  return (
    <Animated.View
      style={[
        {
          ...StyleSheet.absoluteFillObject,
          flex: 1,
          justifyContent: 'center',
          alignItems: 'center',

          backgroundColor: colors.background,
        },
        animatedStyle,
      ]}
    >
      <Svg
        style={{
          flex: 1,
          justifyContent: 'center',
          alignItems: 'center',
        }}
        viewBox='0 0 312 312'
      >
        {splashImagePaths.map((d, key) => (
          <AnimatedStroke
            progress={progress}
            fillProgress={fillProgress}
            d={d}
            key={key}
          />
        ))}
      </Svg>
    </Animated.View>
  );
}
// #endregion animation

type SplashScreenProps = {
  skipAnimation?: boolean;
  dontHide?: boolean;
};
export default function SplashScreen({
  skipAnimation,
  dontHide,
  children,
}: PropsWithChildren<SplashScreenProps>) {
  const {
    colors: { background: bgColor },
  } = useTheme();

  const { getLocation } = useLocation();

  const [fadeOutCompleted, setFadeOutCompleted] = useState(false);
  const [ready, setReady] = useState(false);

  // #region load assets
  const loadAssets = useCallback(async () => {
    try {
      console.log('[SplashScreen] onLoad');

      // hide default splash screen
      await ExpoSplashScreen.hideAsync();

      // Pre-load the assets
      await Promise.all([
        loadFontsAsync({
          ...FontAwesome5.font,
          'space-mono': require('@/assets/fonts/SpaceMono-Regular.ttf'),
          outfit: require('@/assets/fonts/Outfit-VariableFont_wght.ttf'),
        }),
      ])
        .then(() => console.log(`[SplashScreen] Fonts loaded`))
        .catch((err) => console.error(`Couldn't load fonts.. ${err}`));

      // fetch user location
      getLocation().then(() => console.log('[SplashScreen] Location loaded'));
    } catch (err) {
      console.warn({ err });
    }
  }, []);

  useEffect(() => {
    loadAssets();
  }, [loadAssets]);
  // #endregion load assets

  // #region callbacks
  const onCompleted = useCallback(() => {
    console.log('[SplashScreen] onCompleted');
  }, []);

  const onFillCompleted = useCallback(() => {
    console.log('[SplashScreen] onFillCompleted');

    setReady(true);
  }, []);

  const onFadeOutCompleted = useCallback(() => {
    console.log('[SplashScreen] onFadeOutCompleted');

    setFadeOutCompleted(true);
  }, []);
  // #endregion callbacks

  return (
    <View
      style={{
        flex: 1,
        backgroundColor: bgColor,
      }}
    >
      {ready && children}

      {!fadeOutCompleted && (
        <Animation
          onCompleted={onCompleted}
          onFillCompleted={onFillCompleted}
          onFadeOutCompleted={onFadeOutCompleted}
          dontComplete={dontHide}
          skipAnimation={skipAnimation}
        />
      )}
    </View>
  );
}
